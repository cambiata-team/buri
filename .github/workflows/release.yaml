name: Release

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v3
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: true
          prerelease: false

  build-and-upload:
    name: Build and upload
    needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    steps:
      - uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: cli, thor
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
          checksum: sha256

  publish-release:
    name: Publish Release
    needs: [build-and-upload, create-release]
    runs-on: ubuntu-latest

    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create-release.outputs.release_id }}

      - name: Sync with our version API
        id: webhook
        uses: satak/webrequest-action@master
        with:
          url: https://version-api.buri-lang.dev/add-release
          method: POST
          payload: ${{ needs.create-release.outputs.release_id }}
          headers: '{"Authentication": "${{ secrets.RELEASE_WEBHOOK_SECRET }}"}'

      - run: echo ${{ steps.webhook.outputs.output }}
